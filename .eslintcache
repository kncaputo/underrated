[{"/Users/karacaputo/turing/personal-projects/underrated/src/index.js":"1","/Users/karacaputo/turing/personal-projects/underrated/src/App/App.js":"2","/Users/karacaputo/turing/personal-projects/underrated/src/Login/Login.js":"3","/Users/karacaputo/turing/personal-projects/underrated/src/MovieGrid/MovieGrid.js":"4","/Users/karacaputo/turing/personal-projects/underrated/src/apiCalls.js":"5","/Users/karacaputo/turing/personal-projects/underrated/src/MovieDetails/MovieDetails.js":"6","/Users/karacaputo/turing/personal-projects/underrated/src/Poster/Poster.js":"7","/Users/karacaputo/turing/personal-projects/underrated/src/ListItem/ListItem.js":"8","/Users/karacaputo/turing/personal-projects/underrated/src/MovieTrailers/MovieTrailers.js":"9","/Users/karacaputo/turing/personal-projects/underrated/src/StarRating/StarRating.js":"10","/Users/karacaputo/turing/personal-projects/underrated/src/Search/Search.js":"11","/Users/karacaputo/turing/personal-projects/underrated/src/Banner/Banner.js":"12","/Users/karacaputo/turing/personal-projects/underrated/src/Watchlist/Watchlist.js":"13","/Users/karacaputo/turing/personal-projects/underrated/src/Header/Header.js":"14"},{"size":304,"mtime":1611594895794,"results":"15","hashOfConfig":"16"},{"size":5795,"mtime":1611611754063,"results":"17","hashOfConfig":"16"},{"size":1628,"mtime":1611613341870,"results":"18","hashOfConfig":"16"},{"size":531,"mtime":1611594895788,"results":"19","hashOfConfig":"16"},{"size":2061,"mtime":1609694480079,"results":"20","hashOfConfig":"16"},{"size":6720,"mtime":1611594895788,"results":"21","hashOfConfig":"16"},{"size":545,"mtime":1611594895788,"results":"22","hashOfConfig":"16"},{"size":392,"mtime":1611594895794,"results":"23","hashOfConfig":"16"},{"size":1484,"mtime":1611594895788,"results":"24","hashOfConfig":"16"},{"size":1248,"mtime":1609696258450,"results":"25","hashOfConfig":"16"},{"size":567,"mtime":1611594895788,"results":"26","hashOfConfig":"16"},{"size":1595,"mtime":1611594895913,"results":"27","hashOfConfig":"16"},{"size":219,"mtime":1611610888529,"results":"28","hashOfConfig":"16"},{"size":1249,"mtime":1611616993777,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4yo6wz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karacaputo/turing/personal-projects/underrated/src/index.js",[],["61","62"],"/Users/karacaputo/turing/personal-projects/underrated/src/App/App.js",["63"],"/Users/karacaputo/turing/personal-projects/underrated/src/Login/Login.js",["64"],"/Users/karacaputo/turing/personal-projects/underrated/src/MovieGrid/MovieGrid.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/apiCalls.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/MovieDetails/MovieDetails.js",["65","66","67"],"import React, { Component } from \"react\";\nimport { fetchSingleMovie, fetchUserRatings, postUserRating, deleteUserRating } from \"../apiCalls\"; \nimport ListItem from \"../ListItem/ListItem\";\nimport MovieTrailers from \"../MovieTrailers/MovieTrailers\";\nimport StarRating from \"../StarRating/StarRating\";\nimport \"./MovieDetails.css\";\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      singleMovie: {},\n      error: \"\",\n      currentUserRating: null,\n      onWatchlist: false\n    }\n  }\n  \n  componentDidMount() {\n    window.scrollTo(0, 0)\n    fetchSingleMovie(this.props.id)\n    .then(singleMovie => this.setState({ singleMovie: singleMovie.movie }))\n    .then(() => this.getUserRatings())\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, 0)\n    if(prevProps.currentUser !== this.props.currentUser) {\n      this.setState({ currentUserRating: null, error: \"\" })\n      this.getUserRatings()\n    }\n  }\n\n  setStarRating = (rating) => {\n    let ratingId;\n    let userId;\n    \n    if (this.props.currentUser && this.state.currentUserRating) {\n      ratingId = this.state.currentUserRating.id\n      userId = this.props.currentUser.id\n\n      deleteUserRating(userId, ratingId)\n      .then(response => console.log('delete response', response))\n      .catch(error => this.setState({ error: error.message }))\n\n      this.createNewRating(userId, rating)\n\n    } else if (this.props.currentUser) {\n      userId = this.props.currentUser.id\n\n      this.createNewRating(userId, rating)\n    }\n  }\n\n  createNewRating = (userId, rating) => {\n    const newRating = {\n      movie_id: this.state.singleMovie.id,\n      rating: +rating\n    }\n    \n    console.log('newRating obj', newRating)\n    \n    postUserRating(userId, newRating)\n    .then(() => this.updateUserRating())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  getUserRatings() {\n    this.setState({ formattedRating: this.state.singleMovie.average_rating.toFixed(1)})\n   \n    if (this.props.currentUser) {\n      this.updateUserRating()\n    }\n  }\n\n  updateUserRating = () => {\n    fetchUserRatings(this.props.currentUser.id)\n    .then(ratings => { \n      console.log('allratings', ratings)\n      const userRating = ratings.ratings.find(rating => {\n        return rating.movie_id === this.state.singleMovie.id\n      })\n      console.log('userRating', userRating)\n      this.setState({ currentUserRating: userRating })\n    })\n    .catch(error => this.setState({ error: error.message}))  \n  }\n\n  formatGenres = () => {\n    if (!this.state.singleMovie.genres) {\n      return <p className=\"unavailable-genres\">Unavailable</p>\n    } else if (this.state.singleMovie.genres.length > 1) {\n      let commaList = this.state.singleMovie.genres.map(genre => {\n        return(\n          <p key={Math.random()} className=\"genre\">{genre}</p>\n        )\n      })\n      return commaList;\n    } else {\n      return <p className=\"genre\">{this.state.singleMovie.genres[0]}</p>;\n    }\n  }\n\n  generateListItem() {\n    return (\n      <section>\n        <ListItem \n          key={Math.random()}\n          label=\"Release Date\"\n          body={new Date(this.state.singleMovie.release_date).toLocaleDateString()}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Runtime\"\n          body={`${this.state.singleMovie.runtime} mins`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Budget\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.budget)}`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Revenue\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.revenue)}`}\n        />\n      </section>\n    )\n  }\n\n  toggleWatchlist = () => {\n    if (this.state.onWatchlist === false) {\n      this.setState({ onWatchlist: true })\n    } else {\n      this.setState({ onWatchlist: false})\n    }\n  }\n\n\n  render() {\n    return(\n      <section className=\"movie-details\">\n        <section className=\"banner-container\">\n          <img src={this.state.singleMovie.backdrop_path} className=\"banner-img\"/>\n        </section>\n        <section className=\"movie-info\">\n          <section className=\"movie-aside\">\n            <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n            {this.generateListItem()}\n          </section>\n          <section className=\"movie-main\">\n            <section className=\"backdrop-overlay\"> \n              <section className=\"responsive-poster\">\n                <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n              </section>\n              <section className=\"main-header-details\">\n                <h1 className=\"title\">{this.state.singleMovie.title}</h1>\n                <p className=\"tagline\">{this.state.singleMovie.tagline}</p>\n                <p className=\"rating\">\n                  <span className=\"rating-star\">â˜† {this.state.formattedRating}</span>/10\n                </p>\n                <section className=\"genre-list\">\n                  {this.formatGenres()}\n                </section>\n              </section>  \n            </section>\n            <section className=\"overview-box\">\n              <section className=\"rating-watchlist\">\n                <StarRating \n                  currentUser={this.props.currentUser}\n                  currentUserRating={!this.state.currentUserRating ? 0 : this.state.currentUserRating.rating}\n                  canEdit={!this.props.currentUser ? false : true} \n                  setStarRating={this.setStarRating}\n                />\n                {this.state.onWatchlist === true && <button className=\"on-watchlist-button\" onClick={() => this.toggleWatchlist()}>On Watchlist</button>}\n                {this.state.onWatchlist === false && <button className=\"add-watchlist-button\" onClick={() => this.toggleWatchlist()}>+ Add to Watchlist</button>}\n              </section>\n\n              {/* Responsive genres list */}\n              <section className=\"responsive-genre-list\">\n                  {this.formatGenres()}\n              </section>\n              \n              <h3>Synopsis</h3>\n              <p className=\"overview\">{this.state.singleMovie.overview}</p>\n              <section className=\"responsive-list\">\n                {this.generateListItem()}\n              </section>\n            </section>\n            <section className=\"trailer-box\">\n              <h3 className=\"trailer-header\">Trailers</h3>\n              <MovieTrailers \n                id={this.props.id} \n              />\n            </section>\n          </section>\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default MovieDetails;","/Users/karacaputo/turing/personal-projects/underrated/src/Poster/Poster.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/ListItem/ListItem.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/MovieTrailers/MovieTrailers.js",["68"],"import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls';\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactPlayer from 'react-player';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport './MovieTrailers.css';\n\nclass MovieTrailers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trailers: [],\n      error: ''\n    }\n  } \n\n  componentDidMount() {\n    fetchMovieTrailers(this.props.id)\n    .then(movieTrailers => this.setState({ trailers: movieTrailers.videos }))\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  determineAvailableTrailers = () => {\n    return this.state.trailers.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n  }\n  \n  formatTrailers = () => {\n    return this.state.trailers.map(trailer => {\n      if(trailer.site === \"YouTube\") {\n        return (\n          <ReactPlayer \n            key={trailer.id}\n            url={`https://www.youtube.com/watch?v=${trailer.key}`}\n          />  \n        )  \n      }\n    })\n  }\n\n  render() {\n    return(\n      <section className=\"trailers\">\n        {this.determineAvailableTrailers() &&\n          <Carousel\n            showThumbs={false}\n          >\n            {this.formatTrailers()}\n          </Carousel>  \n        }\n        {!this.determineAvailableTrailers() &&\n          <p>Sorry, no available trailers for this movie.</p>\n        }\n      </section>\n    )\n  }\n}\n\nexport default MovieTrailers;","/Users/karacaputo/turing/personal-projects/underrated/src/StarRating/StarRating.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Search/Search.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Banner/Banner.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Watchlist/Watchlist.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Header/Header.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":34,"column":33,"nodeType":"75","messageId":"76","endLine":34,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":145,"column":11,"nodeType":"83","endLine":145,"endColumn":83},{"ruleId":"81","severity":1,"message":"82","line":149,"column":13,"nodeType":"83","endLine":149,"endColumn":84},{"ruleId":"81","severity":1,"message":"82","line":155,"column":17,"nodeType":"83","endLine":155,"endColumn":88},{"ruleId":"73","severity":1,"message":"84","line":30,"column":44,"nodeType":"75","messageId":"85","endLine":30,"endColumn":46},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]