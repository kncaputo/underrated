{"version":3,"sources":["Login/Login.js","Header/Header.js","Poster/Poster.js","MovieGrid/MovieGrid.js","apiCalls/apiCalls.js","ListItem/ListItem.js","MovieTrailers/MovieTrailers.js","StarRating/StarRating.js","MovieDetails/MovieDetails.js","Search/Search.js","Banner/Banner.js","Watchlist/Watchlist.js","App/App.js","index.js"],"names":["Login","determineError","props","error","submitLogin","validateLogin","state","email","password","clearInputs","setState","event","preventDefault","this","clearError","target","name","value","id","type","placeholder","className","onClick","handleClick","onChange","handleChange","Component","Header","currentUser","signOut","to","exact","DropdownButton","title","size","Poster","rating","image","src","alt","toFixed","MovieGrid","posters","movies","map","movie","average_rating","poster_path","endpoint","fetchSingleMovie","fetch","then","response","json","fetchMovieTrailers","ListItem","label","body","MovieTrailers","determineAvailableTrailers","trailers","find","trailer","site","formatTrailers","data-testid","url","key","movieTrailers","videos","catch","message","showThumbs","StarRating","handleStarChange","newRating","setStarRating","currentUserRating","prevProps","handleRatingText","edit","canEdit","count","activeColor","Math","random","MovieDetails","ratingId","userId","method","headers","deleteUserRating","createNewRating","JSON","stringify","postUserRating","movie_id","singleMovie","updateUserRating","ratings","userRating","formatGenres","genres","length","genre","toggleWatchlist","onWatchlist","window","scrollTo","getUserRatings","formattedRating","Date","release_date","toLocaleDateString","runtime","Intl","NumberFormat","format","budget","revenue","backdrop_path","generateListItem","tagline","overview","Search","getUserInput","input","Banner","displayTrailer","trailerDisplay","width","height","controls","muted","playing","loop","config","youtube","playerVars","disablekb","fs","iv_load_policy","modestbranding","currentMovie","Watchlist","App","componentDidMount","allMovies","findMovieGenres","loginEmail","loginPassword","loginCredentials","user","inputValue","handleDropdownValue","dropdownValue","handleRatingValue","ratingValue","clearFilters","generateGenreButtons","toLowerCase","generateRatingsButtons","generateFilterDropdown","toUpperCase","path","render","filterMoviesBySelection","match","params","component","filterByGenre","filter","includes","parseInt","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.35161b26.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.scss';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n  }\n\n  handleChange(event) {\n    this.props.clearError()\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  determineError = () => {\n    if (this.props.error) {\n      return (\n        <section>\n          <p>{this.props.error}</p>\n        </section>\n      )\n    }\n  }\n\n  submitLogin = () => {\n    this.props.validateLogin(this.state.email, this.state.password);\n    this.clearInputs()\n  }\n\n  clearInputs = () => {\n    this.setState({ email: '', password: '' })\n  }\n\n  render() {\n    return(\n      <section id='login-main'>\n        <input\n          name='email'\n          type='text'\n          placeholder='Email'\n          className='login-input'\n          value={this.state.email}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={this.state.password}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        {this.determineError()}\n        <button \n          id='submit-button' \n          onClick={this.submitLogin}>\n          SUBMIT\n        </button>\n      </section>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport Login from '../Login/Login';\nimport { Link, NavLink } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport './Header.scss';\n\nconst Header = (props) => {\n  const { currentUser, validateLogin, error, clearError, signOut } = props;\n  \n  return(\n    <header>\n      <Link to='/'>\n        <h1 className='page-title'>underrated</h1>\n      </Link>\n      <nav>\n        <NavLink exact to='/' className='nav-labels'>\n          all movies\n        </NavLink>\n        <NavLink exact to='/watchlist' className='nav-labels'>\n          watchlist\n        </NavLink>\n        <DropdownButton \n          className='nav-labels' \n          title='account'\n          size='lg'>\n            {!currentUser &&\n              <Login \n                validateLogin={validateLogin} \n                error={error} \n                clearError={clearError}\n              />\n            }\n            {currentUser &&\n              <section>\n                <p id='user-message'>Hello, {currentUser.name}!</p>\n                <button id='sign-out' onClick={signOut}>Sign Out</button>\n              </section>     \n            }\n        </DropdownButton>\n      </nav>\n    </header>\n  ) \n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Poster.scss';\n\nconst Poster = ({ id, title, rating, image }) => {\n\n  return(\n    <Link to={`/movie/${id}`}>\n      <section className='poster' id={id}>\n        <img className='card-img' src={image} alt={title} />\n        <p className='poster-title'>{title}</p>\n        <p className='poster-rating'>&#9734; {rating.toFixed(1)}/10</p>\n        <p className='poster-rating-mini'>&#9734; {rating.toFixed(1)}/10</p>\n      </section>\n    </Link>\n  )\n}\n\nexport default Poster;","import React from 'react';\nimport Poster from '../Poster/Poster';\nimport './MovieGrid.scss';\n\nconst MovieGrid = ({ movies }) => {\n  const posters = movies.map(movie => {\n    return(\n      <Poster\n        id={movie.id}\n        title={movie.title}\n        rating={movie.average_rating}\n        image={movie.poster_path}\n        key={movie.id}\n      />  \n    )\n  })\n  return(\n    <section className='movie-grid'>\n      {posters}\n    </section>\n  )\n}\n\nexport default MovieGrid;\n\n","const endpoint = `https://rancid-tomatillos.herokuapp.com/api/v2`;\n\nexport const fetchMovies = () => {\n  return fetch(`${endpoint}/movies`)\n  .then((response) => response.json())\n}\n\nexport const fetchSingleMovie = (id) => {\n  return fetch(`${endpoint}/movies/${+id}`)\n  .then((response) => response.json())\n}\n\nexport const fetchMovieTrailers = (id) => {\n  return fetch(`${endpoint}/movies/${+id}/videos`)\n  .then(response => response.json());\n}\n\nexport const postLoginCredentials = (loginCredentials) => {\n  return fetch(`${endpoint}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }, \n    body: JSON.stringify(loginCredentials)\n  })\n  .then((response) => response.json())\n}\n\nexport const fetchUserRatings = (id) => {\n  return fetch(`${endpoint}/users/${+id}/ratings`)\n  .then((response) => response.json())\n}\n\nexport const postUserRating = (id, rating) => {\n  return fetch(`${endpoint}/users/${id}/ratings`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }, \n    body: JSON.stringify(rating)\n  })\n  .then((response) => response.json())\n}\n\nexport const deleteUserRating = (id, ratingId) => {\n  return fetch(`${endpoint}/users/${+id}/ratings/${+ratingId}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  })\n  .then((response) => response.json())\n}","import React from 'react';\nimport './ListItem.scss';\n\nconst ListItem =  ({ label, body })  => {\n\n  const formatBody = () => {\n    if (body === '$0') {\n      return '-'\n    }\n    return body;\n  }\n\n  return (\n    <section className='details-box'>\n      <p className='l-details'><b>{label}</b></p>\n      <p className='r-details'>{formatBody()}</p>\n    </section>\n  );\n}\n\nexport default ListItem;","import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls/apiCalls';\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactPlayer from 'react-player';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './MovieTrailers.scss';\n\nclass MovieTrailers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trailers: [],\n      error: ''\n    }\n  } \n\n  componentDidMount() {\n    fetchMovieTrailers(this.props.id)\n    .then(movieTrailers => this.setState({ trailers: movieTrailers.videos }))\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  determineAvailableTrailers = () => {\n    return this.state.trailers.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n  }\n  \n  formatTrailers = () => {\n    return this.state.trailers.map(trailer => {\n      if(trailer.site === \"YouTube\") {\n        return (\n          <ReactPlayer \n            key={trailer.id}\n            data-testid={trailer.id}\n            url={`https://www.youtube.com/watch?v=${trailer.key}`}\n          />  \n        )  \n      }\n    })\n  }\n\n  render() {\n    return(\n      <section className=\"trailers\">\n        {this.determineAvailableTrailers() &&\n          <Carousel\n            showThumbs={false}\n          >\n            {this.formatTrailers()}\n          </Carousel>  \n        }\n        {!this.determineAvailableTrailers() &&\n          <p>Sorry, no available trailers for this movie.</p>\n        }\n      </section>\n    )\n  }\n}\n\nexport default MovieTrailers;","import ReactStars from 'react-rating-stars-component';\nimport React, { Component } from 'react';\n\nclass StarRating extends Component { \n  constructor() {\n    super();\n    this.state = {\n      rating: 0\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ rating: this.props.currentUserRating })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentUserRating !== prevProps.currentUserRating) {\n      this.setState({ rating: this.props.currentUserRating })\n    }\n  }\n  \n  handleStarChange = (newRating) => {\n    this.setState({ rating: newRating })\n    this.props.setStarRating(newRating)\n  }\n\n  handleRatingText() {\n    if (this.props.currentUser === null) {\n      return <p>Please log in to rate</p>\n    } else if (this.props.currentUserRating === 0) {\n      return <p>Rate this movie</p>\n    }\n    return <p>Your rating is {this.state.rating}</p>\n  }\n\n  render() {\n    return(\n      <section>\n        {this.handleRatingText()}\n        <ReactStars\n          key={Math.random()}\n          value={this.state.rating}\n          edit={this.props.canEdit}\n          count={10}\n          onChange={this.handleStarChange}\n          size={24}\n          activeColor=\"#ffd700\"\n        />\n      </section>\n    )\n  }\n}\n\nexport default StarRating;","import React, { Component } from \"react\";\nimport { fetchSingleMovie, fetchUserRatings, postUserRating, deleteUserRating } from \"../apiCalls/apiCalls\"; \nimport ListItem from \"../ListItem/ListItem\";\nimport MovieTrailers from \"../MovieTrailers/MovieTrailers\";\nimport StarRating from \"../StarRating/StarRating\";\nimport \"./MovieDetails.scss\";\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      singleMovie: {},\n      error: \"\",\n      currentUserRating: null,\n      onWatchlist: false\n    }\n  }\n  \n  componentDidMount() {\n    window.scrollTo(0, 0)\n\n    fetchSingleMovie(this.props.id)\n    .then(singleMovie => this.setState({ singleMovie: singleMovie.movie }))\n    .then(() => this.getUserRatings())\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, 0)\n\n    if(prevProps.currentUser !== this.props.currentUser) {\n      this.setState({ currentUserRating: null, error: \"\" })\n      this.getUserRatings()\n    }\n  }\n\n  setStarRating = (rating) => {\n    let ratingId;\n    let userId;\n    \n    if (this.props.currentUser && this.state.currentUserRating) {\n      ratingId = this.state.currentUserRating.id\n      userId = this.props.currentUser.id\n\n      deleteUserRating(userId, ratingId)\n      .catch(error => this.setState({ error: error.message }))\n\n      this.createNewRating(userId, rating)\n\n    } else if (this.props.currentUser) {\n      userId = this.props.currentUser.id\n\n      this.createNewRating(userId, rating)\n    }\n  }\n\n  createNewRating = (userId, rating) => {\n    const newRating = {\n      movie_id: this.state.singleMovie.id,\n      rating: +rating\n    }\n    \n    postUserRating(userId, newRating)\n    .then(() => this.updateUserRating())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  getUserRatings() {\n    this.setState({ formattedRating: this.state.singleMovie.average_rating.toFixed(1)})\n   \n    if (this.props.currentUser) {\n      this.updateUserRating()\n    }\n  }\n\n  updateUserRating = () => {\n    fetchUserRatings(this.props.currentUser.id)\n    .then(ratings => { \n      const userRating = ratings.ratings.find(rating => {\n        return rating.movie_id === this.state.singleMovie.id\n      })\n      this.setState({ currentUserRating: userRating })\n    })\n    .catch(error => this.setState({ error: error.message}))  \n  }\n\n  formatGenres = () => {\n    if (!this.state.singleMovie.genres) {\n      return <p className=\"unavailable-genres\">Unavailable</p>\n    } else if (this.state.singleMovie.genres.length > 1) {\n      let commaList = this.state.singleMovie.genres.map(genre => {\n        return(\n          <p key={Math.random()} className=\"genre\">{genre}</p>\n        )\n      })\n      return commaList;\n    } else {\n      return <p className=\"genre\">{this.state.singleMovie.genres[0]}</p>;\n    }\n  }\n\n  generateListItem() {\n    return (\n      <section>\n        <ListItem \n          key={Math.random()}\n          label=\"Release Date\"\n          body={new Date(this.state.singleMovie.release_date).toLocaleDateString()}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Runtime\"\n          body={`${this.state.singleMovie.runtime} mins`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Budget\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.budget)}`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Revenue\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.revenue)}`}\n        />\n      </section>\n    )\n  }\n\n  toggleWatchlist = () => {\n    if (this.state.onWatchlist === false) {\n      this.setState({ onWatchlist: true })\n    } else {\n      this.setState({ onWatchlist: false})\n    }\n  }\n\n  render() {\n    return(\n      <section className=\"movie-details\">\n        <section className=\"banner-container\">\n          <img src={this.state.singleMovie.backdrop_path} className=\"banner-img\"/>\n        </section>\n        <section className=\"movie-info\">\n          <section className=\"movie-aside\">\n            <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n            {this.generateListItem()}\n          </section>\n          <section className=\"movie-main\">\n            <section className=\"backdrop-overlay\"> \n              <section className=\"responsive-poster\">\n                <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n              </section>\n              <section className=\"main-header-details\">\n                <h1 className=\"title\">{this.state.singleMovie.title}</h1>\n                <p className=\"tagline\">{this.state.singleMovie.tagline}</p>\n                <p className=\"rating\">\n                  <span className=\"rating-star\">☆ {this.state.formattedRating}</span>/10\n                </p>\n                <section className=\"genre-list\">\n                  {this.formatGenres()}\n                </section>\n              </section>  \n            </section>\n            <section className=\"overview-box\">\n              <section className=\"rating-watchlist\">\n                <StarRating \n                  currentUser={this.props.currentUser}\n                  currentUserRating={!this.state.currentUserRating ? 0 : this.state.currentUserRating.rating}\n                  canEdit={!this.props.currentUser ? false : true} \n                  setStarRating={this.setStarRating}\n                />\n                {this.state.onWatchlist === true && <button className=\"on-watchlist-button\" onClick={() => this.toggleWatchlist()}>On Watchlist</button>}\n                {this.state.onWatchlist === false && <button className=\"add-watchlist-button\" onClick={() => this.toggleWatchlist()}>+ Add to Watchlist</button>}\n              </section>\n\n              {/* Responsive genres list */}\n              <section className=\"responsive-genre-list\">\n                  {this.formatGenres()}\n              </section>\n              \n              <h3>Synopsis</h3>\n              <p className=\"overview\">{this.state.singleMovie.overview}</p>\n              <section className=\"responsive-list\">\n                {this.generateListItem()}\n              </section>\n            </section>\n            <section className=\"trailer-box\">\n              <h3 className=\"trailer-header\">Trailers</h3>\n              <MovieTrailers \n                id={this.props.id} \n              />\n            </section>\n          </section>\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default MovieDetails;","import React from 'react';\nimport './Search.scss';\n\nconst Search = (props) => {\n\n  const searchByInput = (event) => {\n    event.preventDefault()\n    props.getUserInput(event.target.value)\n  }\n\n  return(\n    <input \n      onChange={searchByInput} \n      type=\"text\" \n      value={props.input} \n      placeholder=\"&#128269; search by movie title\" \n      className=\"search-bar\">\n    </input>\n  )\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls/apiCalls';\nimport ReactPlayer from 'react-player/youtube';\nimport './Banner.scss';\n\nclass Banner extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentMovie: null,\n      trailers: null,\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    fetchMovieTrailers(337401)\n    .then(trailers => this.setState({ trailers }))\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  displayTrailer = () => {\n    const trailerDisplay = this.state.trailers.videos.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n\n    if (trailerDisplay) {\n      return(\n        <div className=\"player-wrapper\">\n          <ReactPlayer \n              key={trailerDisplay.id}\n              url={`https://www.youtube.com/watch?v=${trailerDisplay.key}`}\n              className=\"react-player\"\n              width=\"100%\"\n              height=\"100%\"\n              controls={false}\n              muted={true}\n              playing={true}\n              loop={true}\n              config={{\n                youtube: {\n                  playerVars: {\n                    disablekb: 1,\n                    fs: 0,\n                    iv_load_policy: 3,\n                    modestbranding: 1,\n                  },\n                },\n              }}\n          />  \n        </div>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <section>\n        {!this.state.trailers && <p>Loading...</p>}\n        {this.state.trailers && this.displayTrailer()}\n      </section>\n    )\n  }\n}\n\nexport default Banner;","import React from 'react';\nimport './Watchlist.scss';\n\nconst Watchlist = () => {\n  return(\n    <section id='watchlist-main'>\n      <h2 id='section-title'>Coming Soon!</h2>\n    </section>\n  )\n}\n\nexport default Watchlist;","import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport MovieGrid from '../MovieGrid/MovieGrid';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport Search from '../Search/Search';\nimport Banner from '../Banner/Banner';\nimport Watchlist from '../Watchlist/Watchlist';\nimport { fetchMovies, fetchSingleMovie, postLoginCredentials } from '../apiCalls/apiCalls';\nimport { Route } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport './App.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error: '',\n      currentUser: null,\n      input: '',\n      dropdownValue: 'all',\n      ratingValue: 'any'\n    }\n  }\n  \n  componentDidMount = () => {\n    fetchMovies()\n    .then(allMovies => this.setState({ movies: allMovies.movies}))\n    .then(() => this.findMovieGenres())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  findMovieGenres = () => {\n    this.state.movies.map(movie => {\n      fetchSingleMovie(movie.id)\n      .then(singleMovie => movie.genres = singleMovie.movie.genres)\n    })\n  }\n\n  validateLogin = (loginEmail, loginPassword) => {\n    const credentials = {\n      email: loginEmail,\n      password: loginPassword\n    }\n\n    postLoginCredentials(credentials)\n    .then(user => this.setState({ currentUser: user.user }))\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  clearError = () => {\n    this.setState({ error: '' })\n  }\n\n  signOut = () => {\n    this.setState({ currentUser: null })\n  }\n\n  get filterMoviesBySelection() {\n    const filterByGenre = this.state.movies.filter(movie => {\n      if (this.state.dropdownValue !== 'all' && movie.genres) {\n        return movie.genres.includes(this.state.dropdownValue)\n      } else {\n        return this.state.movies\n      }\n    })\n\n    const filterByRating = filterByGenre.filter(movie => {\n      if (this.state.ratingValue !== 'any') {\n        const roundedRating = parseInt(movie.average_rating)\n        return roundedRating === parseInt(this.state.ratingValue)\n      } else {\n        return filterByGenre\n      }\n    })\n\n    return filterByRating.filter(movie => {\n      return movie.title.toLowerCase().includes(this.state.input)\n    })\n  }\n\n  getUserInput = (inputValue) => {\n    this.setState({input: inputValue})\n  }\n\n  handleDropdownValue = (event) => {\n    this.setState({ dropdownValue: event.target.name})\n  }\n\n  handleRatingValue = (event) => {\n    this.setState({ ratingValue: event.target.value })\n  }\n\n  clearFilters = () => {\n    this.setState({ input: '', dropdownValue: 'all', ratingValue: 'any' })\n  }\n\n  generateGenreButtons = () => {\n    const genres = ['Adventure', 'Animation', 'Comedy', 'Crime', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Romance', 'Science', 'Thriller', 'War', 'Western'];\n    \n    return genres.map(genre => {\n      return <button name={genre} className='dropdown-filter' onClick={(event) => this.handleDropdownValue(event)}>{genre.toLowerCase()}</button>\n    })\n  }\n\n  generateRatingsButtons = () => {\n    const ratings = [{name: 'one', value: 1}, {name: 'two', value: 2}, {name: 'three', value: 3}, {name: 'four', value: 4}, {name: 'five', value: 5}, \n    {name: 'six', value: 6}, {name: 'seven', value: 7}, {name: 'eight', value: 8}, {name: 'nine', value: 9}, {name: 'ten', value: 10}];\n    \n    return ratings.map(rating => {\n      return  <button name={rating.name} value={rating.value} className='dropdown-filter' onClick={(event) => this.handleRatingValue(event)}>{rating.name}</button>\n    })\n  }\n\n  generateFilterDropdown = () => {\n    return(\n      <section className='genre-filter'>\n        <section className='filter-title-box'>\n          <DropdownButton\n            title={`showing ${this.state.dropdownValue.toUpperCase()} movies`}\n            className='genre-dropdown'\n            id='filter-title-l'>\n            <button className='dropdown-filter' onClick={() => this.setState({ dropdownValue: 'all' })}>all</button>\n            {this.generateGenreButtons()}\n          </DropdownButton>\n        </section>\n        <section className='filter-title-box'>\n          <DropdownButton\n            title={`with ${this.state.ratingValue.toUpperCase()} rating`}\n            className='rating-dropdown'\n            id='filter-title-r'>\n            {this.generateRatingsButtons()}\n          </DropdownButton>\n        </section>\n        {(this.state.input !== '' || this.state.dropdownValue !== 'all' || this.state.ratingValue !== 'any') &&\n          <button className='clear' onClick={() => this.clearFilters()}>clear</button>\n        }\n      </section>\n    )\n  }\n\n  render() {\n    return(\n      <main>\n        <Header \n          currentUser={this.state.currentUser}\n          validateLogin={this.validateLogin}\n          error={this.state.error}\n          clearError={this.clearError}\n          signOut={this.signOut}\n        />\n        <Route \n          exact \n          path='/' \n          render={() => {\n            return (\n              <section>\n                <Banner />\n                <Search \n                  getUserInput={this.getUserInput} \n                  input={this.state.input}\n                />\n                {this.generateFilterDropdown()}\n                <MovieGrid\n                  movies={this.filterMoviesBySelection}  \n                />\n              </section>\n            )\n          }}\n        />\n        <Route \n          exact\n          path='/movie/:id'\n          render={( { match }) => {\n            return (\n              <MovieDetails \n                id={match.params.id}\n                currentUser={this.state.currentUser}\n             />)\n          }}\n        />\n        <Route\n          exact\n          path='/watchlist'\n          component={Watchlist}\n        />  \n      </main>\n    ) \n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App/App';\n\nconst router = <BrowserRouter basename='/underrated'><App /></BrowserRouter>\n\nReactDOM.render(\n router,\n  document.getElementById('root')\n);"],"sourceRoot":""}